services:
  loki:
    image: grafana/loki:${LOKI_VERSION}
    ports:
      - "${LOKI_PORT}:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
  tempo:
    image: grafana/tempo:${TEMPO_VERSION}
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - tempo_data:/var/tempo
      - ./tempo/tempo.yaml:/etc/tempo.yaml
    ports:
      - "${TEMPO_HTTP_PORT}:3200"
      - "${TEMPO_GRPC_PORT}:9095"
    labels:
      service: ${TEMPO_SERVICE}
      application: ${APPLICATION}
      environment: ${ENVIRONMENT}
    logging:
      driver: loki
      options:
        loki-url: http://${OBSERVABILITY_HOST}:${LOKI_PORT}/loki/api/v1/push
        labels: service,application,environment
  mimir:
    image: grafana/mimir:${MIMIR_VERSION}
    command:
      - --config.file=/etc/mimir/mimir.yaml 
      - --auth.multitenancy-enabled=false
      - --auth.no-auth-tenant=anonymous
    ports:
      - "${MIMIR_HTTP_PORT}:9009"
      - "${MIMIR_API_PORT}:8080"
    volumes:
      - mimir_data:/data
      - ./mimir/mimir.yaml:/etc/mimir/mimir.yaml
    labels:
      service: ${MIMIR_SERVICE}
      application: ${APPLICATION}
      environment: ${ENVIRONMENT}
    logging:
      driver: loki
      options:
        loki-url: http://${OBSERVABILITY_HOST}:${LOKI_PORT}/loki/api/v1/push
        labels: service,application,environment
  alloy:
    image: grafana/alloy:${ALLOY_VERSION}
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy
    command:
      - "run"
      - "/etc/alloy/config.alloy"
    ports:
      - "${OTLP_GRPC_PORT}:4317"
      - "${OTLP_HTTP_PORT}:4318"
    depends_on:
      - tempo
      - mimir
    restart: unless-stopped
    labels:
      service: alloy
      application: ${APPLICATION}
      environment: ${ENVIRONMENT}
    logging:
      driver: loki
      options:
        loki-url: http://${OBSERVABILITY_HOST}:${LOKI_PORT}/loki/api/v1/push
        labels: service,application,environment
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    ports:
      - "${GRAFANA_PORT}:3000"
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_SERVER_ROOT_URL: /
    depends_on:
      - ${LOKI_SERVICE}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    labels:
      service: ${GRAFANA_SERVICE}
      application: ${APPLICATION}
      environment: ${ENVIRONMENT}
    logging:
      driver: loki
      options:
        loki-url: http://${OBSERVABILITY_HOST}:${LOKI_PORT}/loki/api/v1/push
        labels: service,application,environment

volumes:
  loki_data:
  tempo_data:
  mimir_data:
  grafana_data: